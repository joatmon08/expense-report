---
apiVersion: v1
kind: Service
metadata:
  name: expense-v2
  labels:
    app: expense
    release: v2
  annotations:
    ingress.kubernetes.io/service-upstream: "true"
spec:
  selector:
    app: expense
    release: v2
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: expense-v2
automountServiceAccountToken: true
---
apiVersion: consul.hashicorp.com/v1alpha1
kind: ServiceDefaults
metadata:
  name: expense-v2
spec:
  protocol: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expense-v2
  labels:
    app: expense
    release: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expense
      release: v2
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service-upstreams: "expense-db-mysql:3306"
        consul.hashicorp.com/transparent-proxy-exclude-outbound-ports: "9411"
        consul.hashicorp.com/service-meta-version: v2
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/role: "expense-v2"
        vault.hashicorp.com/agent-inject-secret-application.properties: "expense/database/mysql/creds/expense-v2"
        vault.hashicorp.com/secret-volume-path-application.properties: "/tmp/config"
        vault.hashicorp.com/agent-inject-template-application.properties: |
          spring.application.name=expense
          server.port=80

          spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
          spring.datasource.url=jdbc:mysql://localhost:3306/DemoExpenses
          {{ with secret "expense/database/mysql/creds/expense-v2" -}}
          spring.datasource.username={{ .Data.username }}
          spring.datasource.password={{ .Data.password }}
          {{- end }}
          spring.jpa.hibernate.ddl-auto=update
      labels:
        app: expense
        release: v2
        framework: java
    spec:
      serviceAccountName: expense-v2
      containers:
        - name: expense
          image: "joatmon08/expense:java-2.6.5"
          ports:
            - containerPort: 80
          env:
            - name: OTEL_EXPORTER_ZIPKIN_ENDPOINT
              value: "http://jaeger:9411/api/v2/spans"
            - name: SPRING_CONFIG_LOCATION
              value: "/tmp/config/application.properties"
          livenessProbe:
            httpGet:
              path: /api
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
